/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin on the JVM.
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

def jerseyVersion = "2.26"

test {
    useJUnitPlatform()
}

dependencies {
    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.0"

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:4.0.2' // for kotest framework
    testImplementation 'io.kotest:kotest-assertions-core-jvm:4.0.2' // for kotest core jvm assertions
    testImplementation 'io.mockk:mockk:1.9.3.kotlin12'

    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:${jerseyVersion}"
    compile "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
}

application {
    mainClassName = 'io.kup.framework.console.CommandHandlerKt'
}

run {
    standardInput = System.in
    environment = ["SHUTDOWN_TYPE" : "INPUT"]
}

jar {
    manifest {
        attributes 'Main-Class': 'io.kup.framework.console.CommandHandlerKt'
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
